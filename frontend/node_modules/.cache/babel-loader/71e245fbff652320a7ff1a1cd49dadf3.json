{"ast":null,"code":"var _jsxFileName = \"/home/amlan/techs/frontend/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar contactRegex = /^\\d{10}$/;\nvar emailRegex = /^([a-z\\d\\.-]+)@([a-z]+)\\.([a-z]{2,5})(\\.[a-z]{2,8})?$/;\nvar dobREGEX = /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/;\nvar passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*~?<>])[a-zA-Z0-9!@#$%^&*~?<>]{8,30}$/;\nvar checkValidation = false;\nexport default function Form() {\n  _s();\n\n  //States for signup\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [dob, setDob] = useState('');\n  const [contact, setContact] = useState('');\n  const [lang, setLang] = useState(''); //const [submit, setSubmit] = useState('');\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const handleDob = e => {\n    setDob(e.target.value);\n  };\n\n  const handleContact = e => {\n    setContact(e.target.value);\n  };\n\n  const handleLang = e => {\n    setLang(e.target.value);\n  };\n\n  function emailValidation() {\n    if (!emailRegex.test(email)) {\n      alert('Error email');\n      checkValidation = false;\n    } else {\n      checkValidation = true;\n    }\n  }\n\n  function passwordValidation() {\n    if (!passwordRegex.test(password)) {\n      alert('Error password');\n      checkValidation = false;\n    } else {\n      checkValidation = true;\n    }\n  }\n\n  function contactValidation() {\n    if (!contactRegex.test(contact)) {\n      alert('Error contact');\n      checkValidation = false;\n    } else {\n      checkValidation = true;\n    }\n  }\n\n  function langValidation() {\n    if (!lang) {\n      alert('Lang cannot be empty');\n      checkValidation = false;\n    }\n  }\n\n  function dobValidation() {\n    if (!dobREGEX.test(dob)) {\n      alert('Error DOB');\n      checkValidation = false;\n    } else {\n      checkValidation = true;\n    }\n  }\n\n  function printconsole() {\n    if (!dob) {\n      alert('Error DOB');\n      checkValidation = false;\n    }\n\n    if (checkValidation) {\n      console.log(name + ' ' + dob + \" \" + password + \" \" + contact + \" \" + email);\n    }\n  }\n\n  const signUpUser = e => {\n    e.preventDefault();\n    const userObject = {\n      name: tname,\n      email: email,\n      pwd: password,\n      contact: contact,\n      dob: dob\n    };\n    axios.post('http://localhost:9898/signup', userObject).then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEmail,\n        className: \"input\",\n        value: email,\n        type: \"email\",\n        onBlur: emailValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleName,\n        className: \"input\",\n        value: name,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePassword,\n        className: \"input\",\n        value: password,\n        type: \"password\",\n        onBlur: passwordValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleContact,\n        className: \"input\",\n        value: contact,\n        type: \"text\",\n        onBlur: contactValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"DOB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleDob,\n        className: \"input\",\n        value: dob,\n        type: \"date\",\n        id: dob,\n        onBlur: dobValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Lang\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleLang,\n        className: \"input\",\n        value: lang,\n        type: \"text\",\n        onBlur: langValidation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: signUpUser,\n      className: \"submitButton\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"jQxOwCWqBUCFLfuC88Lw72L94zg=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/amlan/techs/frontend/src/Form.js"],"names":["useState","axios","contactRegex","emailRegex","dobREGEX","passwordRegex","checkValidation","Form","name","setName","email","setEmail","password","setPassword","dob","setDob","contact","setContact","lang","setLang","handleEmail","e","target","value","handleName","handlePassword","handleDob","handleContact","handleLang","emailValidation","test","alert","passwordValidation","contactValidation","langValidation","dobValidation","printconsole","console","log","signUpUser","preventDefault","userObject","tname","pwd","post","then","res","data","catch","error"],"mappings":"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","sourcesContent":["import {useState} from 'react';\nimport axios from 'axios';\n\nvar contactRegex = /^\\d{10}$/;\n\nvar emailRegex = /^([a-z\\d\\.-]+)@([a-z]+)\\.([a-z]{2,5})(\\.[a-z]{2,8})?$/;\n\nvar dobREGEX = /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/;\n\nvar passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*~?<>])[a-zA-Z0-9!@#$%^&*~?<>]{8,30}$/;\n\nvar checkValidation = false;\n\nexport default function Form() {\n\n    //States for signup\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [dob, setDob] =useState('');\n    const [contact, setContact] = useState('');\n    const [lang, setLang] = useState('');\n    //const [submit, setSubmit] = useState('');\n\n    const handleEmail = (e) => {\n        setEmail(e.target.value);\n    }\n\n    const handleName = (e) => {\n        setName(e.target.value);\n    }\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handleDob = (e) => {\n        setDob(e.target.value);\n    }\n\n    const handleContact = (e) => {\n        setContact(e.target.value);\n    }\n\n    const handleLang = (e) => {\n        setLang(e.target.value);\n    }\n\n    function emailValidation(){\n        if(!emailRegex.test(email)){\n            alert('Error email');\n            checkValidation = false;\n        } else {\n            checkValidation = true;\n        }\n    }\n\n    function passwordValidation(){\n        if(!passwordRegex.test(password)){\n            alert('Error password');\n            checkValidation = false;\n        } else {\n            checkValidation = true;\n        }\n    }\n\n    function contactValidation(){\n        if(!contactRegex.test(contact)){\n            alert('Error contact');\n            checkValidation = false;\n        } else {\n            checkValidation = true;\n        }\n    }\n\n    function langValidation(){\n        if(!lang){\n            alert('Lang cannot be empty');\n            checkValidation = false;\n        }\n    }\n\n    function dobValidation(){\n        if(!dobREGEX.test(dob)){\n            alert('Error DOB');\n            checkValidation = false;\n        } else {\n            checkValidation = true;\n        }\n    }\n    \n    function printconsole(){\n        if(!dob){\n            alert('Error DOB');\n            checkValidation = false;\n        }\n        if(checkValidation) {\n            console.log(name+' '+dob+\" \"+password+\" \"+contact+\" \"+email);\n        }\n    }\n\n\n    const signUpUser = (e) => {\n        e.preventDefault();\n        const userObject = {\n            name: tname,\n            email: email,\n            pwd: password,\n            contact: contact,\n            dob: dob\n        };\n        axios.post('http://localhost:9898/signup', userObject)\n        .then((res) => {\n            console.log(res.data)\n        }).catch((error) => {\n            console.log(error)\n        });\n    }\n\n    return (\n        <div className='form'>\n            <div>\n                <h1>\n                    User SignUp\n                </h1>\n            </div>\n            <form>\n\n                <label className='label'>\n                    Email\n                </label>\n                <input onChange={handleEmail} className='input' value={email} type='email' onBlur={emailValidation}/>\n                \n                <label className='label'>\n                    Name\n                </label>\n                <input onChange={handleName} className='input' value={name} type='text'/>\n\n                <label className='label'>\n                    Password\n                </label>\n                <input onChange={handlePassword} className='input' value={password} type='password' onBlur={passwordValidation}/>\n\n                <label className='label'>\n                    Contact\n                </label>\n                <input onChange={handleContact} className='input' value={contact} type='text' onBlur={contactValidation}/>\n\n                <label className='label'>\n                    DOB\n                </label>\n                <input onChange={handleDob} className='input' value={dob} type='date' id={dob} onBlur={dobValidation} />\n\n                <label className='label'>\n                    Lang\n                </label>\n                <input onChange={handleLang} className='input' value={lang} type='text' onBlur={langValidation}/>\n            </form>\n            <button type='submit' onClick={signUpUser} className='submitButton'>Submit</button>\n        </div>\n    )\n    \n}"]},"metadata":{},"sourceType":"module"}